{
	"name": "02-create-sql-table",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "sparkpool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "0cd18e5a-e5b1-4aed-be3c-6df9ea41a374"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/98fb3285-f648-4b06-80a4-01c259978e8f/resourceGroups/flights-mlops-proof-of-concept/providers/Microsoft.Synapse/workspaces/synw-flights-bronze-layer/bigDataPools/sparkpool",
				"name": "sparkpool",
				"type": "Spark",
				"endpoint": "https://synw-flights-bronze-layer.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sparkpool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Create SQL table within Synapse Analytics"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\n",
					"account_name = \"stflightshistorical001\"\n",
					"container_name = \"azfs-flights-historical\"\n",
					"relative_path = \"flights-historical\" \n",
					"\n",
					"final_path = f\"abfss://{container_name}@{account_name}.dfs.core.windows.net/{relative_path}/\"\n",
					"\n",
					"# Create the table pointing to the root folder of the data lake\n",
					"spark.sql(f\"\"\"\n",
					"    CREATE TABLE IF NOT EXISTS default.flights_historical (\n",
					"        id STRING,\n",
					"        flight_code STRING,\n",
					"        file_path STRING,\n",
					"        source STRING,\n",
					"        search_date STRING,\n",
					"        outbound_departure_datetime STRING,\n",
					"        inbound_departure_datetime STRING,\n",
					"        route STRING,\n",
					"        city_pair STRING,\n",
					"        country STRING,\n",
					"        cabin_class STRING,\n",
					"        airport_code STRING,\n",
					"        fare_type STRING,\n",
					"        passengers INT,\n",
					"        infants INT,\n",
					"        children INT,\n",
					"        adults INT,\n",
					"        currency STRING,\n",
					"        total_cost DOUBLE,\n",
					"        cost_per_adult DOUBLE,\n",
					"        baggage_allowance STRING,\n",
					"        last_update STRING\n",
					"    )\n",
					"    USING Parquet\n",
					"    LOCATION '{final_path}'\n",
					"\"\"\")"
				],
				"execution_count": 11
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# SQL Query through Synapse Analytics"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Select data from a specific partition\r\n",
					"df = spark.sql(\"\"\"\r\n",
					"    SELECT * FROM default.flights_historical\r\n",
					"    WHERE search_date = '2023-07-01'\r\n",
					"\"\"\")\r\n",
					"\r\n",
					"# Show the DataFrame\r\n",
					"df.show()"
				],
				"execution_count": null
			}
		]
	}
}