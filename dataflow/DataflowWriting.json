{
	"name": "DataflowWriting",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "flightsparquet",
						"type": "DatasetReference"
					},
					"name": "parquetfiles"
				}
			],
			"sinks": [
				{
					"name": "sinkSQLPool",
					"rejectedDataLinkedService": {
						"referenceName": "synw-flights-bronze-layer-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          id as string,",
				"          flight_code as string,",
				"          file_path as string,",
				"          source as string,",
				"          outbound_departure_datetime as string,",
				"          inbound_departure_datetime as string,",
				"          city_pair as string,",
				"          country as string,",
				"          cabin_class as string,",
				"          airport_code as string,",
				"          fare_type as string,",
				"          passengers as integer,",
				"          infants as integer,",
				"          children as integer,",
				"          adults as integer,",
				"          currency as string,",
				"          total_cost as double,",
				"          cost_per_adult as double,",
				"          baggage_allowance as string,",
				"          last_update as string,",
				"          search_date as string,",
				"          route as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> parquetfiles",
				"parquetfiles sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'default',",
				"     tableName: 'flightsDB_historical',",
				"     recreate:true) ~> sinkSQLPool"
			]
		}
	}
}